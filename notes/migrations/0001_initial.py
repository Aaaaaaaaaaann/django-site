# Generated by Django 3.0.3 on 2020-02-19 12:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('slug', models.SlugField(max_length=20)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('slug', models.SlugField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('author', models.CharField(max_length=50)),
                ('slug', models.SlugField(max_length=200)),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(null=True, upload_to='notes/')),
                ('description', models.TextField(max_length=200)),
                ('issue', tinymce.models.HTMLField()),
                ('year', models.IntegerField(validators=[django.core.validators.RegexValidator(regex='\\d{4}')])),
                ('body', tinymce.models.HTMLField(blank=True, null=True)),
                ('shouldRead', tinymce.models.HTMLField(null=True, unique=True)),
                ('active', models.BooleanField(default=False)),
                ('tags', models.ManyToManyField(blank=True, related_name='tags', to='notes.Tag')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notes', to='notes.Topic')),
            ],
            options={
                'ordering': ['-year', 'title'],
                'unique_together': {('title', 'author')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField(max_length=500)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('notification', models.BooleanField(default=False)),
                ('answer_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_answer_from', to='notes.Comment')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='notes.Note')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='notes.Comment')),
            ],
            options={
                'ordering': ('added',),
            },
        ),
    ]
